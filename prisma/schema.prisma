// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL") // NOTE: Please consider when using multiple environment (e.g. dev, staging, and production)
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  fullName     String
  email        String     @unique
  gender       UserGender
  age          Int
  phoneNumber  String
  password     String
  refreshToken String?    @db.VarChar(512)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  role   Role   @relation(fields: [roleId], references: [id])
  roleId String

  profile Profile?

  UserChatRoom   ChatRoom[] @relation("UserChatRoom")
  ExpertChatRoom ChatRoom[] @relation("ExpertChatRoom")

  @@map("users")
}

model Role {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User[]

  @@map("roles")
}

model Profile {
  id              String          @id @default(uuid())
  avatar          String?
  about           String?
  maritalStatus   ProfileMarital?
  certifiedStatus String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  work   Work?   @relation(fields: [workId], references: [id])
  workId String?

  education   Education? @relation(fields: [educationId], references: [id])
  educationId String?

  investment     ProfileInvestmentAndInsurance?
  insurance      ProfileInvestmentAndInsurance?
  incomePerMonth Decimal?                       @db.Decimal(25, 2)
  totalSaving    Decimal?                       @db.Decimal(25, 2)
  totalDebt      Decimal?                       @db.Decimal(25, 2)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  @@map("profiles")
}

model Work {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Profile Profile[]

  @@map("works")
}

model Education {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Profile Profile[]

  @@map("educations")
}

model ChatRoom {
  id   String       @id @default(uuid())
  type ChatRoomType

  user   User   @relation("UserChatRoom", fields: [userId], references: [id])
  userId String

  expert   User?   @relation("ExpertChatRoom", fields: [expertId], references: [id])
  expertId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("chat_rooms")
}

enum UserGender {
  Laki_laki @map("Laki-laki")
  Perempuan
}

enum ProfileMarital {
  Lajang
  Menikah
  Cerai
}

enum ProfileInvestmentAndInsurance {
  Saham
  Reksadana
  Obligasi
  Emas
  Cryptocurrency
}

enum ChatRoomType {
  Expert
  AI
}
